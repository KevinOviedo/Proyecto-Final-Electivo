{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\TALLER DESARROLLO WEB\\\\proyecto semestral\\\\proyecto-taller-20202\\\\src\\\\views\\\\Plibros.js\";\nimport React from 'react';\nimport MaterialTable from 'material-datatable';\nexport default function MaterialTable1() {\n  const [item, setItem] = useState([]);\n  const columns = [{\n    name: \"Nombre\",\n    field: \"nombre\",\n    options: {\n      filter: true,\n      sort: true\n    }\n  }, {\n    name: \"Autor\",\n    field: \"autor\",\n    options: {\n      filter: true,\n      sort: false\n    }\n  }, {\n    name: 'Año',\n    field: 'ano'\n  }, {\n    name: 'Idioma',\n    field: 'idioma'\n  }];\n  useEffect(() => {\n    cargar();\n  }, []);\n\n  const cargar = async () => {\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/api/todosLibros\");\n    console.log(data);\n    setItem(data.libro);\n    return null;\n  };\n\n  console.log(errors);\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: columns,\n    data: item,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/xampp/htdocs/TALLER DESARROLLO WEB/proyecto semestral/proyecto-taller-20202/src/views/Plibros.js"],"names":["React","MaterialTable","MaterialTable1","item","setItem","useState","columns","name","field","options","filter","sort","useEffect","cargar","data","axios","get","console","log","libro","errors","onRowAdd","newData","Promise","resolve","setTimeout","setState","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-datatable';\r\n\r\nexport default function MaterialTable1() {\r\n    const [item, setItem] = useState([]);\r\n\r\n    const columns = [\r\n      {\r\n       name: \"Nombre\",\r\n       field: \"nombre\",\r\n       options: {\r\n        filter: true,\r\n        sort: true,\r\n       }\r\n      },\r\n      {\r\n       name: \"Autor\",\r\n       field: \"autor\",\r\n       options: {\r\n        filter: true,\r\n        sort: false,\r\n       }\r\n      },\r\n      {\r\n        name: 'Año', \r\n        field: 'ano'\r\n      },\r\n      {\r\n        name: 'Idioma', \r\n        field: 'idioma'\r\n      }\r\n    \r\n     ];\r\n\r\n  useEffect(() => {\r\n    cargar();\r\n  }, []);\r\n\r\n\r\n  const cargar = async() =>{\r\n    const { data } = await axios.get(\"http://localhost:5000/api/todosLibros\");\r\n\r\n    console.log(data);\r\n    setItem(data.libro);\r\n    return null;\r\n  }\r\n  console.log(errors);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Editable Example\"\r\n      columns={columns}\r\n      data={item}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}