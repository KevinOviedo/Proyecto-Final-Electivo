{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\TALLER DESARROLLO WEB\\\\proyecto semestral\\\\proyecto-taller-20202\\\\src\\\\views\\\\Plibros.js\";\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-datatable';\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nexport default function MaterialTable1() {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const classes = useStyles();\n  const [item, setItem] = useState({\n    columns: [{\n      name: \"ID Libro\",\n      field: \"id_libro\",\n      options: {\n        filter: true,\n        sort: true\n      }\n    }, {\n      name: \"Titulo\",\n      field: \"titulo\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      name: 'Autor',\n      field: 'autor'\n    }, {\n      name: 'Idioma',\n      field: 'idioma'\n    }]\n  });\n\n  const onSubmit = data => {\n    axios.post(\"http://localhost:5000/api/guardarLibro\", data).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    cargar();\n  }, []);\n\n  const cargar = async () => {\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/api/todosLibros\");\n    setItem(data.libro);\n    return null;\n  };\n\n  console.log(errors);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  }, \"Ingreso de Libros\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Libro ID\",\n    variant: \"outlined\",\n    name: \"id_libro\",\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Titulo del libro\",\n    variant: \"outlined\",\n    name: \"titulo\",\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Autor del libro\",\n    variant: \"outlined\",\n    name: \"autor\",\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Idioma\",\n    variant: \"outlined\",\n    name: \"idioma\",\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Enviar\")), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Biblioteca Virtual\"), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Libros guardados\",\n    columns: item.columns,\n    data: item.data.libro,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setItem(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setItem(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setItem(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["C:/xampp/htdocs/TALLER DESARROLLO WEB/proyecto semestral/proyecto-taller-20202/src/views/Plibros.js"],"names":["React","useState","useEffect","MaterialTable","axios","useForm","TextField","makeStyles","Button","useStyles","theme","root","margin","spacing","width","MaterialTable1","register","handleSubmit","errors","classes","item","setItem","columns","name","field","options","filter","sort","onSubmit","data","post","then","response","console","log","catch","error","cargar","get","libro","button","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","reject","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-datatable';\r\nimport axios from 'axios';\r\nimport { useForm } from 'react-hook-form';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nexport default function MaterialTable1() {\r\n    \r\n    const { register, handleSubmit, errors } = useForm();\r\n    const classes = useStyles();\r\n    const [item, setItem] = useState({\r\n\r\n    columns: [\r\n      {\r\n       name: \"ID Libro\",\r\n       field: \"id_libro\",\r\n       options: {\r\n        filter: true,\r\n        sort: true,\r\n       }\r\n      },\r\n      {\r\n       name: \"Titulo\",\r\n       field: \"titulo\",\r\n       options: {\r\n        filter: true,\r\n        sort: false,\r\n       }\r\n      },\r\n      {\r\n        name: 'Autor', \r\n        field: 'autor'\r\n      },\r\n      {\r\n        name: 'Idioma', \r\n        field: 'idioma'\r\n      }\r\n    \r\n     ],\r\n\r\n    });\r\n\r\n  const onSubmit = data => {\r\n    axios\r\n    .post(\"http://localhost:5000/api/guardarLibro\", data)\r\n    .then(\r\n      (response)=>{\r\n        console.log(response.data);\r\n\r\n      }\r\n    )\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n  \r\n  useEffect(() => {\r\n    cargar();\r\n  }, []);\r\n\r\n\r\n  const cargar = async() =>{\r\n    const { data } = await axios.get(\"http://localhost:5000/api/todosLibros\");\r\n\r\n    setItem(data.libro);\r\n    return null;\r\n  }\r\n  console.log(errors);\r\n  return (\r\n\r\n     <div> \r\n         <h1>Ingreso de Libros</h1>\r\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.root}>\r\n\r\n      <TextField id=\"outlined-basic\" label=\"Libro ID\" variant=\"outlined\" name=\"id_libro\" inputRef={register} />\r\n      <TextField id=\"outlined-basic\" label=\"Titulo del libro\" variant=\"outlined\" name=\"titulo\" inputRef={register} />\r\n      <TextField id=\"outlined-basic\" label=\"Autor del libro\" variant=\"outlined\" name=\"autor\" inputRef={register} />\r\n      <TextField id=\"outlined-basic\" label=\"Idioma\" variant=\"outlined\" name=\"idioma\" inputRef={register} />\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        type=\"submit\"\r\n      >\r\n        Enviar\r\n      </Button>\r\n    </form>\r\n        <h1>Biblioteca Virtual</h1>\r\n        <MaterialTable\r\n        title=\"Libros guardados\"\r\n        columns={item.columns}\r\n        data={item.data.libro}\r\n        editable={{\r\n            onRowAdd: (newData) =>\r\n            new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                    resolve();\r\n                    setItem((prevState) => {\r\n                    const data = [...prevState.data];\r\n                    data.push(newData);\r\n                    return { ...prevState, data };\r\n                });\r\n                }, 600);\r\n            }),\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                resolve();\r\n                if (oldData) {\r\n                    setItem((prevState) => {\r\n                    const data = [...prevState.data];\r\n                    data[data.indexOf(oldData)] = newData;\r\n                    return { ...prevState, data };\r\n                    });\r\n                }\r\n                }, 600);\r\n            }),\r\n            onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                resolve();\r\n                setItem((prevState) => {\r\n                    const data = [...prevState.data];\r\n                    data.splice(data.indexOf(oldData), 1);\r\n                    return { ...prevState, data };\r\n                });\r\n                }, 600);\r\n            }),\r\n        }}\r\n        />\r\n    </div>   \r\n\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}